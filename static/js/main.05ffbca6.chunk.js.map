{"version":3,"sources":["views/RegisterView.module.css","views/LoginView.module.css","Components/ContactForm/Form.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","redux/contacts/contact-selectors.js","views/HomepageView.jsx","redux/auth/auth-selectors.js","routes/PublicRoute.js","routes/PrivateRoute.js","redux/auth/auth-operations.js","views/LoginView.jsx","views/RegisterView.jsx","redux/contacts/contact-operations.js","Components/ContactForm/Form.jsx","Components/ContactList/ContactList.jsx","redux/contacts/contact-actions.js","Components/Filter/Filter.jsx","views/ContactView.jsx","App.js","redux/contacts/contact-reducers.js","redux/auth/auth-slice.js","redux/store.js","index.js"],"names":["module","exports","getAllItems","state","contacts","items","getFilter","filter","isLoading","onFilteredContacts","createSelector","normalizedFilter","toLowerCase","trim","name","includes","Homepage","loading","useSelector","isAuth","auth","isLoggedIn","PublicRoute","children","restricted","redirectTo","shouldRedirect","to","PrivateRoute","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","console","log","message","logIn","logOut","fetchCurrentUser","_","thunkAPI","getState","persistedToken","rejectWithValue","get","LoginView","useState","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","event","target","value","className","s","title","onSubmit","preventDefalt","form","autoComplete","label","text","type","onChange","input","btn","RegisterView","setName","e","currentTarget","preventDefault","formLbl","required","inputLbl","btnInput","fetchContact","resp","addContact","number","addedContact","deleteContact","contactId","delete","ContactForm","setNumber","reset","nameId","uuidv4","numberId","map","contact","alert","_uuidv4","id","htmlFor","pattern","ContactList","loader","useEffect","contactLists","contactItem","contactName","contactNumber","onClick","btnDelete","filterContact","createAction","Filter","filterInputLabel","filteredInput","placeholder","ContactView","App","path","element","createReducer","fulfilled","action","payload","pending","rejected","error","rootReducer","combineReducers","authSlice","createSlice","initialState","user","extraReducers","authPersistConfig","key","storage","whitelist","contactPersistConfig","persistedAuthReducer","persistReducer","authReducer","persistedContactReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","obj","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05ffbca6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegisterView_form__8zR94\",\"title\":\"RegisterView_title__1Gvzv\",\"formLbl\":\"RegisterView_formLbl__1MkM9\",\"inputLbl\":\"RegisterView_inputLbl__1_zw7\",\"btnInput\":\"RegisterView_btnInput__2HTXZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginView_form__3oDl6\",\"label\":\"LoginView_label__2QAW5\",\"input\":\"LoginView_input__2fLKU\",\"btn\":\"LoginView_btn__3xinw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3xWK_\",\"formLbl\":\"Form_formLbl__1hXjF\",\"inputLbl\":\"Form_inputLbl__37K9B\",\"btnInput\":\"Form_btnInput__1F7Nq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactLists\":\"ContactList_contactLists__3lGgJ\",\"contactItem\":\"ContactList_contactItem__jwh3v\",\"contactName\":\"ContactList_contactName__jZFpM\",\"btnDelete\":\"ContactList_btnDelete__2aMwc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filteredInputLabel\":\"Filter_filteredInputLabel__2vUqY\",\"filteredInput\":\"Filter_filteredInput__3JPdb\"};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getAllItems = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\nexport const isLoading = (state) => state.contacts.isLoading;\n\nexport const onFilteredContacts = createSelector(\n  [getAllItems, getFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase().trim();\n\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import { useSelector } from \"react-redux\";\r\nimport { isLoading } from \"../redux/contacts/contact-selectors\";\r\n\r\nfunction Homepage() {\r\n  const loading = useSelector(isLoading);\r\n  return <div>{!loading && <h2>Your Phonebook!</h2>}</div>;\r\n}\r\n\r\nexport default Homepage;\r\n","export const isAuth = (state) => state.auth.isLoggedIn;\r\n","import { Navigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { isAuth } from \"../redux/auth/auth-selectors\";\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = \"/\",\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(isAuth);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return <div>{shouldRedirect ? <Navigate to={redirectTo} /> : children};</div>;\r\n}\r\n","import { Navigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { isAuth } from \"../redux/auth/auth-selectors\";\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = \"/register\",\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(isAuth);\r\n  return <div>{isLoggedIn ? children : <Navigate to={redirectTo} />};</div>;\r\n}\r\n","import axios from \"axios\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nexport const register = createAsyncThunk(\r\n  \"auth/register\",\r\n  async (credentials) => {\r\n    try {\r\n      const { data } = await axios.post(\"/users/signup\".credentials);\r\n      token.set(data.token);\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const logIn = createAsyncThunk(\"auth/login\", async (credentials) => {\r\n  try {\r\n    const { data } = await axios.post(\"/users/login\".credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n});\r\n\r\nexport const logOut = createAsyncThunk(\"auth/logout\", async () => {\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n    token.unset();\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n});\r\n\r\nexport const fetchCurrentUser = createAsyncThunk(\r\n  \"auth/refresh\",\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get(\"/users/current\");\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n);\r\n","import { useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { logIn } from \"../redux/auth/auth-operations\";\r\nimport s from \"./LoginView.module.css\";\r\n\r\nconst LoginView = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    switch (name) {\r\n      case \"email\":\r\n        return setEmail(value);\r\n      case \"password\":\r\n        return setPassword(value);\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefalt();\r\n    dispatch(logIn({ email, password }));\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className={s.title}>Sign in</h1>\r\n\r\n      <form onSubmit={handleSubmit} className={s.form} autoComplete=\"off\">\r\n        <label className={s.label}>\r\n          <p className={s.text}>Email</p>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n            className={s.input}\r\n          />\r\n        </label>\r\n\r\n        <label className={s.label}>\r\n          <p className={s.text}>Password</p>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n            className={s.input}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className={s.btn}>\r\n          sign in\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","import { register } from \"../redux/auth/auth-operations\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport s from \"./RegisterView.module.css\";\r\n\r\nfunction RegisterView() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        return setName(value);\r\n      case \"email\":\r\n        return setEmail(value);\r\n      case \"password\":\r\n        return setPassword(value);\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(register({ name, email, password }));\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className={s.form}>\r\n      <h1 className={s.title}>Registration</h1>\r\n\r\n      <form autoComplete=\"off\" onSubmit={handleSubmit} className={s.formLbl}>\r\n        <label className={s.formLbl}>\r\n          <p className={s.text}>Name</p>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            required\r\n            onChange={handleChange}\r\n            className={s.inputLbl}\r\n          />\r\n        </label>\r\n\r\n        <label className={s.formLbl}>\r\n          <span className={s.text}>e-mail</span>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            required\r\n            onChange={handleChange}\r\n            className={s.inputLbl}\r\n          />\r\n        </label>\r\n\r\n        <label className={s.formLbl}>\r\n          <span className={s.text}>Password</span>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            required\r\n            onChange={handleChange}\r\n            className={s.inputLbl}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className={s.btnInput}>\r\n          Registration\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterView;\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nexport const fetchContact = createAsyncThunk(\n  \"contact/fetchContact\",\n  async () => {\n    // fetchContact.pending();\n    try {\n      const resp = await axios.get(\"/contacts\");\n      return resp.data;\n    } catch (error) {\n      console.log(error.message);\n      // return fetchContact.rejected(error);\n    }\n  }\n);\n\nexport const addContact = createAsyncThunk(\n  \"contact/addContact\",\n  async ({ name, number }) => {\n    const addedContact = {\n      name,\n      number,\n    };\n\n    const resp = await axios.post(\"/contacts\", addedContact);\n    return resp.data;\n  }\n);\n\nexport const deleteContact = createAsyncThunk(\n  \"contact/deleteContact\",\n  async (contactId) => {\n    await axios.delete(`/contacts/${contactId}`);\n    return contactId;\n  }\n);\n","import { useState } from \"react\";\r\nimport s from \"./Form.module.css\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { addContact } from \"../../redux/contacts/contact-operations\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllItems } from \"../../redux/contacts/contact-selectors\";\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const contacts = useSelector(getAllItems);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (contacts.map((contact) => contact.name).includes(name)) {\r\n      alert(`${name} is already in contacs.`);\r\n      return;\r\n    }\r\n\r\n    const _uuidv4 = uuidv4();\r\n    const addNewContact = {\r\n      id: _uuidv4,\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    dispatch(addContact(addNewContact));\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const nameId = uuidv4();\r\n  const numberId = uuidv4();\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label htmlFor={nameId} className={s.formLbl}>\r\n        {\" \"}\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          className={s.inputLbl}\r\n        />\r\n      </label>\r\n      <br />\r\n      <label htmlFor={numberId} className={s.formLbl}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          className={s.inputLbl}\r\n        />\r\n      </label>\r\n      <br />\r\n      <button type=\"submit\" value=\"Отправить\" className={s.btnInput}>\r\n        Add Contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport s from \"./ContactList.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  fetchContact,\r\n  deleteContact,\r\n} from \"../../redux/contacts/contact-operations\";\r\nimport {\r\n  isLoading,\r\n  onFilteredContacts,\r\n} from \"../../redux/contacts/contact-selectors\";\r\n\r\nfunction ContactList() {\r\n  const contacts = useSelector(onFilteredContacts);\r\n  const loader = useSelector(isLoading);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContact());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    !loader &&\r\n    contacts && (\r\n      <ul className={s.contactLists}>\r\n        {contacts.map(({ name, number, id }) => (\r\n          <li key={id} className={s.contactItem}>\r\n            <p className={s.contactName}>\r\n              {name}: <span className={s.contactNumber}>{number}</span>\r\n            </p>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => dispatch(deleteContact(id))}\r\n              className={s.btnDelete}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactsRequest = createAction(\n  \"contact/fetchContactsRequest\"\n);\nexport const fetchContactsSuccess = createAction(\n  \"contact/fetchContactsSuccess\"\n);\nexport const fetchContactsError = createAction(\"contact/fetchContactsError\");\n\nexport const addContactRequest = createAction(\"contact/addContactRequest\");\nexport const addContactSuccess = createAction(\"contact/addContactSuccess\");\nexport const addContactError = createAction(\"contact/addContactError\");\n\nexport const deleteContactRequest = createAction(\n  \"deleteContact/deleteContactRequest\"\n);\nexport const deleteContactSuccess = createAction(\n  \"deleteContact/deleteContactSuccess\"\n);\nexport const deleteContactError = createAction(\n  \"deleteContact/deleteContactError\"\n);\n\nexport const filterContact = createAction(\"contacts/filterContact\");\n","import React from \"react\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { filterContact } from \"../../redux/contacts/contact-actions\";\r\nimport { getFilter } from \"../../redux/contacts/contact-selectors\";\r\n// import { getFilterAction } from \"../../redux/contact-slice\";\r\n\r\nfunction Filter() {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <label className={s.filterInputLabel}>Find contacts by name</label>\r\n      <br />\r\n      <input\r\n        className={s.filteredInput}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={(e) => dispatch(filterContact(e.target.value))}\r\n        placeholder=\"Contact\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport ContactForm from \"../Components/ContactForm/Form\";\r\nimport ContactList from \"../Components/ContactList/ContactList\";\r\nimport Filter from \"../Components/Filter/Filter\";\r\nimport { fetchContact } from \"../redux/contacts/contact-operations\";\r\n// import UserMenu from \"../Components/UserMenu/UserMenu\";\r\n\r\nfunction ContactView() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchContact());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <ContactForm />\r\n        <Filter />\r\n      </div>\r\n      <div>\r\n        <ContactList />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactView;\r\n","// import ContactForm from \"./Components/ContactForm/Form\";\n// import ContactList from \"./Components/ContactList/ContactList\";\n// import Filter from \"./Components/Filter/Filter\";\n// import s from \"./App.css\";\n// import { useSelector, useDispatch } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport AppBar from \"./Components/AppBar\";\nimport Homepage from \"./views/HomepageView\";\nimport PublicRoute from \"./routes/PublicRoute\";\nimport PrivateRoute from \"./routes/PrivateRoute\";\nimport LoginView from \"./views/LoginView\";\nimport RegisterView from \"./views/RegisterView\";\nimport ContactView from \"./views/ContactView\";\n// import { fetchCurrentUser } from \"./redux/auth/auth-operations\";\nimport { isAuth } from \"./redux/auth/auth-selectors\";\n\nfunction App() {\n  // const isLoggedIn = useSelector(isAuth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(isAuth.fetchCurrentUser());\n  }, [dispatch]);\n\n  // useEffect(() => {\n  //   dispatch(fetchCurrentUser(isLoggedIn));\n  // }, [dispatch, isLoggedIn]);\n\n  return (\n    <div className=\"App\">\n      <AppBar />\n\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <PublicRoute restricted redirectTo=\"/contacts\">\n              <Homepage />\n            </PublicRoute>\n          }\n        />\n\n        <Route\n          path=\"/register\"\n          element={\n            <PublicRoute restricted>\n              <RegisterView />\n            </PublicRoute>\n          }\n        />\n\n        <Route\n          path=\"/login\"\n          element={\n            <PublicRoute restricted>\n              {\" \"}\n              <LoginView />\n            </PublicRoute>\n          }\n        />\n\n        <Route\n          path=\"/contacts\"\n          element={\n            <PrivateRoute redirectTo=\"/login\">\n              <ContactView />\n            </PrivateRoute>\n          }\n        />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\n// import { addContact, deleteContact, filterContact } from \"./actions\";\nimport { filterContact } from \"./contact-actions\";\nimport { fetchContact, addContact, deleteContact } from \"./contact-operations\";\n\nconst items = createReducer([], {\n  [fetchContact.fulfilled]: (_, action) => action.payload,\n  [addContact.fulfilled]: (state, action) => [action.payload, ...state],\n  [deleteContact.fulfilled]: (state, action) =>\n    state.filter((contact) => contact.id !== action.payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContact.pending]: () => true,\n  [fetchContact.fulfilled]: () => false,\n  [fetchContact.rejected]: () => false,\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n});\n\nconst filter = createReducer(\"\", {\n  [filterContact]: (_, action) => action.payload,\n});\n\nconst error = createReducer(null, {});\n\nconst rootReducer = combineReducers({\n  items,\n  loading,\n  filter,\n  error,\n});\n\nexport default rootReducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { register, logIn, logOut, fetchCurrentUser } from \"./auth-operations\";\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoading: false,\r\n  isLoggedIn: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  extraReducers: {\r\n    [register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoading = false;\r\n      state.isLoggedIn = true;\r\n    },\r\n\r\n    [logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoading = false;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [logOut.fulfilled](state, action) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoading = false;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport rootReducer from \"./contacts/contact-reducers\";\nimport authReducer from \"./auth/auth-slice\";\n// import { PureComponent } from \"react\";\n// import contactReduser from \"./contact-slice\";\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nconst contactPersistConfig = {\n  key: \"contacts\",\n  storage,\n  whitelist: [\"items\"],\n};\n\nconst persistedAuthReducer = persistReducer(authPersistConfig, authReducer);\n\nconst persistedContactReducer = persistReducer(\n  contactPersistConfig,\n  rootReducer\n);\n\nconst store = configureStore({\n  reducer: {\n    auth: persistedAuthReducer,\n    contacts: persistedContactReducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n  devTools: true,\n});\n\nconst persistor = persistStore(store);\nconst obj = { store, persistor };\n\nexport default obj;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport data from \"./redux/store.js\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={data.store}>\n      <PersistGate loading={null} persistor={data.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}